<!DOCTYPE html>
<!-- saved from url=(0071)http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#FancytreeOptions -->
<html lang="en" data-ember-extension="1"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <title>JSDoc: Global</title>
    
    <script src="./JSDoc_ Global_files/sh_main.min.js"> </script>
    <script src="./JSDoc_ Global_files/sh_javascript.min.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="./JSDoc_ Global_files/node-dark.css">
    <link type="text/css" rel="stylesheet" href="./JSDoc_ Global_files/jsdoc-default.css">
</head>

<body>

<div id="main">
    
    <h1 class="page-title">Global</h1>
    
    



<section>
    
<header>
    <h2>
    
    </h2>
    
</header>  

<article>
    <div class="container-overview">
    
    
    
        
        
        
<dl class="details">
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
-->
    
	
	
	
	
</dl>

        
        
    
    </div>
    
    
    
    
    
    
    
    
    
    
    
    
        <h3 class="subsection-title">Members</h3>
        
        <dl>
            
<dt>
    <h4 class="name" id="EventData"><span class="type-signature"></span>EventData<span class="type-signature"> :Object</span></h4>
    
    
</dt>
<dd>
    
    <div class="description">
        Context object passed to events and hook functions.
    </div>
    
    
    
<dl class="details">
    
        
        <h5 class="subsection-title">Properties:</h5>
        
        <dl>

<table class="props">
    <thead>
	<tr>
		<th>Type</th>
		
		
		<th>Name</th>
		
		
		
		
		
		
		<th class="last">Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            <td class="type">
            
                        <a href="https://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree.html">Fancytree</a>
                        
                    
            </td>
            
            
                <td class="name"><code>tree</code></td>
            
            
            
            
            
            
            <td class="description last">The tree instance</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        object
                        
                    
            </td>
            
            
                <td class="name"><code>widget</code></td>
            
            
            
            
            
            
            <td class="description last">The <a href="https://api.jqueryui.com/jQuery.widget">jQuery UI tree widget</a></td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        <a href="https://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#FancytreeOptions">FancytreeOptions</a>
                        
                    
            </td>
            
            
                <td class="name"><code>options</code></td>
            
            
            
            
            
            
            <td class="description last">Shortcut to tree.options</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        Event
                        
                    
            </td>
            
            
                <td class="name"><code>originalEvent</code></td>
            
            
            
            
            
            
            <td class="description last">The <a href="https://api.jquery.com/category/events/event-object">jQuery Event</a> that initially triggered this call</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        <a href="https://wwwendt.de/tech/fancytree/doc/jsdoc/FancytreeNode.html">FancytreeNode</a>
                         | 
                    
                        null
                        
                    
            </td>
            
            
                <td class="name"><code>node</code></td>
            
            
            
            
            
            
            <td class="description last">The node that this call applies to (`null` for tree events)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        any
                        
                    
            </td>
            
            
                <td class="name"><code>result</code></td>
            
            
            
            
            
            
            <td class="description last">(output parameter) Event handlers can return values back to the caller. Used by `lazyLoad`, `postProcess`, ...</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                         | 
                    
                        undefined
                        
                    
            </td>
            
            
                <td class="name"><code>targetType</code></td>
            
            
            
            
            
            
            <td class="description last">(only for click and dblclick events) 'title' | 'prefix' | 'expander' | 'checkbox' | 'icon'</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        any
                        
                    
            </td>
            
            
                <td class="name"><code>response</code></td>
            
            
            
            
            
            
            <td class="description last">(only for postProcess event) Original ajax response</td>
        </tr>
	
	
	</tbody>
</table></dl>
        
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
	<dt class="tag-source">Source:</dt>
	<dd class="tag-source"><ul class="dummy"><li>jsdoc-globals.js, line 14</li></ul></dd>
	
-->
    
	
	
	
	
</dl>

    
    
</dd>

        
            
<dt>
    <h4 class="name" id="FancytreeEvents"><span class="type-signature"></span>FancytreeEvents<span class="type-signature"> :Object</span></h4>
    
    
</dt>
<dd>
    
    <div class="description">
        Events are called like this:
   `CALLBACK_NAME(event, data)`
where `event` is a <a href="http://api.jquery.com/category/events/event-object">jQuery Event</a> object and `data` is of type <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#EventData">EventData</a>
The `this` context is set to  tree's the HTMLDivElement
    </div>
    
    
    
<dl class="details">
    
        
        <h5 class="subsection-title">Properties:</h5>
        
        <dl>

<table class="props">
    <thead>
	<tr>
		<th>Type</th>
		
		
		<th>Name</th>
		
		
		
		
		
		
		<th class="last">Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>activate</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was activated</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>beforeActivate</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` is about to be (de)activated. Current status is `data.node.isActive()`. Return `false` to prevent default processing</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>beforeExpand</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` is about to be collapsed/expanded. Current status is `data.node.isExpanded()`. Return `false` to prevent default processing</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>beforeRestore</code></td>
            
            
            
            
            
            
            <td class="description last">ext-persist is about to restore the previous state. Return `false` to prevent default processing</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>beforeSelect</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` is about to be (de)selected. Current status is `data.node.isSelected()`. Return `false` to prevent default processing</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>blur</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` lost keyboard focus</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>blurTree</code></td>
            
            
            
            
            
            
            <td class="description last">`data.tree` lost keyboard focus</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>click</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was clicked. `data.targetType` contains the region ("title", "expander", ...). Return `false` to prevent default processing, i.e. activating, expanding, selecting, etc.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>clickPaging</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` is a 'paging' status node and was activated. Use data.node.replaceWith() to load additional nodes.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>collapse</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was collapsed</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>create</code></td>
            
            
            
            
            
            
            <td class="description last">Widget was created (called only once, even if re-initialized).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>createNode</code></td>
            
            
            
            
            
            
            <td class="description last">Allow tweaking and binding, after node was created for the first time (NOTE: this event is only available as callback, but not for bind())</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>dblclick</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was double-clicked. `data.targetType` contains the region ("title", "expander", ...). Return `false` to prevent default processing, i.e. expanding, etc.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>deactivate</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was deactivated</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>enhanceTitle</code></td>
            
            
            
            
            
            
            <td class="description last">Allow extending the `&lt;span class='fancytree-title'&gt;` markup, for example by adding badges, ... (NOTE: this event is only available as callback, but not for bind())</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>expand</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was expanded</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>focus</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` received keyboard focus</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>focusTree</code></td>
            
            
            
            
            
            
            <td class="description last">`data.tree` received keyboard focus</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code><del>iconClass</del></code></td>
            
            
            
            
            
            
            <td class="description last">@deprecated use tree option `icon` instead.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>init</code></td>
            
            
            
            
            
            
            <td class="description last">Widget was (re-)initialized.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>keydown</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` received key. `event.which` contains the key. Return `false` to prevent default processing, i.e. navigation. Call `data.result = "preventNav";` to prevent navigation but still allow default handling inside embedded input controls.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>keypress</code></td>
            
            
            
            
            
            
            <td class="description last">(currently unused)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>lazyLoad</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` is a lazy node that is expanded for the first time. The new child data must be returned in the `data.result` property (see `source` option for available formats).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>loadChildren</code></td>
            
            
            
            
            
            
            <td class="description last">Node data was loaded, i.e. `node.nodeLoadChildren()` finished</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>loadError</code></td>
            
            
            
            
            
            
            <td class="description last">A load error occurred. Return `false` to prevent default processing</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>postProcess</code></td>
            
            
            
            
            
            
            <td class="description last">Allows to modify the ajax response</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>removeNode</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was removed (NOTE: this event is only available as callback, but not for bind())</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>renderColumns</code></td>
            
            
            
            
            
            
            <td class="description last">(used by table extension)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>renderStatusColumns</code></td>
            
            
            
            
            
            
            <td class="description last">(used by table extension)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>renderNode</code></td>
            
            
            
            
            
            
            <td class="description last">Allow tweaking after node state was rendered (NOTE: this event is only available as callback, but not for bind())</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>renderTitle</code></td>
            
            
            
            
            
            
            <td class="description last">Allow replacing the `&lt;span class='fancytree-title'&gt;` markup (NOTE: this event is only available as callback, but not for bind())</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>restore</code></td>
            
            
            
            
            
            
            <td class="description last">ext-persist has expanded, selected, and activated the previous state</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>select</code></td>
            
            
            
            
            
            
            <td class="description last">`data.node` was (de)selected. Current status is `data.node.isSelected()`</td>
        </tr>
	
	
	</tbody>
</table></dl>
        
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
	<dt class="tag-source">Source:</dt>
	<dd class="tag-source"><ul class="dummy"><li>jsdoc-globals.js, line 176</li></ul></dd>
	
-->
    
	
	
	<dt class="tag-see">See:</dt>
	<dd class="tag-see">
        <ul>
            <li><a href="http://api.jquery.com/category/events/event-object">jQuery Event</a></li>
        
            <li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#EventData">EventData</a></li>
        </ul>
	</dd>
	
	
	
</dl>

    
    
        <h5>Example</h5>
        
    <pre class="sh_javascript sh_sourceCode"><code> $<span class="sh_symbol">(</span><span class="sh_string">"#tree"</span><span class="sh_symbol">).</span><span class="sh_function">fancytree</span><span class="sh_symbol">(</span><span class="sh_cbracket">{</span>
    activate<span class="sh_symbol">:</span> <span class="sh_keyword">function</span><span class="sh_symbol">(</span>event<span class="sh_symbol">,</span> data<span class="sh_symbol">)</span><span class="sh_cbracket">{</span>
        <span class="sh_keyword">var</span> node <span class="sh_symbol">=</span> data<span class="sh_symbol">.</span>node<span class="sh_symbol">;</span>
    <span class="sh_cbracket">}</span>
<span class="sh_cbracket">}</span><span class="sh_symbol">);</span></code></pre>

    
</dd>

        
            
<dt>
    <h4 class="name" id="FancytreeOptions"><span class="type-signature"></span>FancytreeOptions<span class="type-signature"> :Object</span></h4>
    
    
</dt>
<dd>
    
    <div class="description">
        Fancytree options (see also example)
    </div>
    
    
    
<dl class="details">
    
        
        <h5 class="subsection-title">Properties:</h5>
        
        <dl>

<table class="props">
    <thead>
	<tr>
		<th>Type</th>
		
		
		<th>Name</th>
		
		
		
		
		
		
		<th class="last">Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>activeVisible</code></td>
            
            
            
            
            
            
            <td class="description last">Make sure that the active node is always visible, i.e. its parents are expanded (default: true).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        object
                        
                    
            </td>
            
            
                <td class="name"><code>ajax</code></td>
            
            
            
            
            
            
            <td class="description last">Default options for ajax requests</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>aria</code></td>
            
            
            
            
            
            
            <td class="description last">(default: false) Add WAI-ARIA attributes to markup</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>autoActivate</code></td>
            
            
            
            
            
            
            <td class="description last">Activate a node when focused with the keyboard (default: true)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>autoCollapse</code></td>
            
            
            
            
            
            
            <td class="description last">Automatically collapse all siblings, when a node is expanded (default: false).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>autoScroll</code></td>
            
            
            
            
            
            
            <td class="description last">Scroll node into visible area, when focused by keyboard (default: false).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>checkbox</code></td>
            
            
            
            
            
            
            <td class="description last">Display checkboxes to allow selection (default: false).<br>
    Note that selection via the API or initialization data is still possible.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        Integer
                        
                    
            </td>
            
            
                <td class="name"><code>clickFolderMode</code></td>
            
            
            
            
            
            
            <td class="description last">Defines what happens, when the user click a folder node.<br>1:activate, 2:expand, 3:activate and expand, 4:activate/dblclick expands  (default: 4)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        Integer
                        
                    
            </td>
            
            
                <td class="name"><code>debugLevel</code></td>
            
            
            
            
            
            
            <td class="description last">0..2 (null: use global setting $.ui.fancytree.debugInfo)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        function
                        
                    
            </td>
            
            
                <td class="name"><code>defaultKey</code></td>
            
            
            
            
            
            
            <td class="description last">callback(node) is called for new nodes without a key. Must return a new unique key. (default null: generates default keys like that: "_" + counter)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>enableAspx</code></td>
            
            
            
            
            
            
            <td class="description last">Accept passing ajax data in a property named `d` (default: true).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>escapeTitles</code></td>
            
            
            
            
            
            
            <td class="description last">Make sure all HTML tags are escaped (default: false).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string[]
                        
                    
            </td>
            
            
                <td class="name"><code>extensions</code></td>
            
            
            
            
            
            
            <td class="description last">List of active extensions (default: [])</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>focusOnSelect</code></td>
            
            
            
            
            
            
            <td class="description last">Set focus when node is checked by a mouse click (default: false)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>generateIds</code></td>
            
            
            
            
            
            
            <td class="description last">Add `id="..."` to node markup (default: false).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                         | 
                    
                        Function
                        
                    
            </td>
            
            
                <td class="name"><code>icon</code></td>
            
            
            
            
            
            
            <td class="description last">Display node icons (default: true)<br>
    true: use default icons, depending on `node.folder` and `node.expanded`<br>
    false: hide icons<br>
    function(node, data): callback returning true, false, or a string.<br>
    NOTE: changed with v2.14.
	   See the node option of the same name for an explanation of possible string values.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code><del>icons</del></code></td>
            
            
            
            
            
            
            <td class="description last">@deprecated use `icon` instead</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>idPrefix</code></td>
            
            
            
            
            
            
            <td class="description last">prefix used to generate node markup ID attributes (default: "ft_", requires generateIds to be set)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>imagePath</code></td>
            
            
            
            
            
            
            <td class="description last">Path to a folder containing icons (default: null, using 'skin/' subdirectory).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>keyboard</code></td>
            
            
            
            
            
            
            <td class="description last">Support keyboard navigation (default: true).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>keyPathSeparator</code></td>
            
            
            
            
            
            
            <td class="description last">(default: "/")</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        Integer
                        
                    
            </td>
            
            
                <td class="name"><code>minExpandLevel</code></td>
            
            
            
            
            
            
            <td class="description last">2: top-level nodes are not collapsible (default: 1)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>quicksearch</code></td>
            
            
            
            
            
            
            <td class="description last">navigate to next node by typing the first letters (default: false)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        object
                        
                    
            </td>
            
            
                <td class="name"><code>scrollOfs</code></td>
            
            
            
            
            
            
            <td class="description last">optional margins for node.scrollIntoView() (default: {top: 0, bottom: 0})</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        jQuery
                        
                    
            </td>
            
            
                <td class="name"><code>scrollParent</code></td>
            
            
            
            
            
            
            <td class="description last">scrollable container for node.scrollIntoView() (default: $container)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        Integer
                        
                    
            </td>
            
            
                <td class="name"><code>selectMode</code></td>
            
            
            
            
            
            
            <td class="description last">1:single, 2:multi, 3:multi-hier (default: 2)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        any
                        
                    
            </td>
            
            
                <td class="name"><code>source</code></td>
            
            
            
            
            
            
            <td class="description last">Used to Initialize the tree.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        object
                        
                    
            </td>
            
            
                <td class="name"><code>strings</code></td>
            
            
            
            
            
            
            <td class="description last">Translation table<br>
    default: <code>{loading: "Loading…", loadError: "Load error!", moreData: "More…", noData: "No data."}</code></td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code><del>tabbable</del></code></td>
            
            
            
            
            
            
            <td class="description last">@deprecated use `tabindex` instead</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>tabindex</code></td>
            
            
            
            
            
            
            <td class="description last">Add tabindex attribute to container, so tree can be reached using TAB (default: "0")<br>
    "0": Tree control can be reached using TAB keys<br>
    "-1": Tree control cannot be reached using TAB keys, but may receive keyboard focusable using mouse clicks or Javascript<br>
    "": Tree control is not tabbable nor may it receive keyboard focus.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>titlesTabbable</code></td>
            
            
            
            
            
            
            <td class="description last">Add tabindex='0' to node title span, so it can receive keyboard focus</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        object
                        
                    
            </td>
            
            
                <td class="name"><code>toggleEffect</code></td>
            
            
            
            
            
            
            <td class="description last">Animation options, false:off (default: { effect: "blind", options: {direction: "vertical", scale: "box"}, duration: 200 })</td>
        </tr>
	
	
	</tbody>
</table></dl>
        
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
	<dt class="tag-source">Source:</dt>
	<dd class="tag-source"><ul class="dummy"><li>jsdoc-globals.js, line 121</li></ul></dd>
	
-->
    
	
	
	
	
</dl>

    
    
        <h5>Example</h5>
        
    <pre class="sh_javascript sh_sourceCode"><code> $<span class="sh_symbol">(</span><span class="sh_string">"#tree"</span><span class="sh_symbol">).</span><span class="sh_function">fancytree</span><span class="sh_symbol">(</span><span class="sh_cbracket">{</span> source<span class="sh_symbol">:</span> <span class="sh_cbracket">{</span> url<span class="sh_symbol">:</span> <span class="sh_string">"/myService"</span> <span class="sh_cbracket">}</span> <span class="sh_cbracket">}</span><span class="sh_symbol">);</span></code></pre>

    
</dd>

        
            
<dt>
    <h4 class="name" id="NodeData"><span class="type-signature"></span>NodeData<span class="type-signature"> :Object</span></h4>
    
    
</dt>
<dd>
    
    <div class="description">
        Data object passed to FancytreeNode() constructor.
Note: typically these attributes are accessed by class methods, e.g. `node.isExpanded()`
and `node.setTitle("foo")`.
    </div>
    
    
    
<dl class="details">
    
        
        <h5 class="subsection-title">Properties:</h5>
        
        <dl>

<table class="props">
    <thead>
	<tr>
		<th>Type</th>
		
		
		<th>Name</th>
		
		
		
		
		
		
		<th class="last">Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>active</code></td>
            
            
            
            
            
            
            <td class="description last">(Initialization only, but will not be stored with the node.)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        NodeData[]
                        
                    
            </td>
            
            
                <td class="name"><code>children</code></td>
            
            
            
            
            
            
            <td class="description last">Optional array of child nodes.<br>
    Note that for <i>lazy</i> nodes, a value of null or undefined is interpreted as
    <i>not yet loaded</i>; if an array is passed (even an empty one), the
    node is considered <i>loaded</i> which will effectively disable the
    lazy-behavior.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        object
                        
                    
            </td>
            
            
                <td class="name"><code>data</code></td>
            
            
            
            
            
            
            <td class="description last">All unknown properties from constructor will be copied to `node.data`.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>expanded</code></td>
            
            
            
            
            
            
            <td class="description last">Initial expansion state. Use `node.setExpanded()` or `node.isExpanded()` to access.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>extraClasses</code></td>
            
            
            
            
            
            
            <td class="description last">Class names added to the node markup (separate with space).<br>
    Note: use `node.add/remove/toggleClass()` to modify.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>focus</code></td>
            
            
            
            
            
            
            <td class="description last">(Initialization only, but will not be stored  with the node.)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>folder</code></td>
            
            
            
            
            
            
            <td class="description last">Folders have different default icons and honor the `clickFolderMode` option.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>hideCheckbox</code></td>
            
            
            
            
            
            
            <td class="description last">Pass `true` to remove checkbox for this node.<br>
    Note that selection via the API or initialization data is still possible.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                         | 
                    
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>icon</code></td>
            
            
            
            
            
            
            <td class="description last">Define this node's icon.<br>
    undefined: Use global tree option of the same name<br>
    true: Use default icon, depending on `node.folder` and `node.expanded` status<br>
    false: Hide icon<br>
    String: A string value that contains a '/' or a '.' is used as `src` attribute for a &lt;img&gt; tag.
    (See also the global `imagePath` option.)<br>
    Any other string value is used to generate custom tags, e.g. for "ui-icon ui-icon-heart":<br>
    &lt;span class="fancytree-custom-icon ui-icon ui-icon-heart" /&gt;.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code><del>iconclass</del></code></td>
            
            
            
            
            
            
            <td class="description last">@deprecated use `icon` instead.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>key</code></td>
            
            
            
            
            
            
            <td class="description last">Unique key for this node (auto-generated if omitted).</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>lazy</code></td>
            
            
            
            
            
            
            <td class="description last">Lazy folders call the `lazyLoad` on first expand to load their children.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>refKey</code></td>
            
            
            
            
            
            
            <td class="description last">(Reserved, used by 'clones' extension.)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>selected</code></td>
            
            
            
            
            
            
            <td class="description last">Initial selection state. Use `node.setSelected()` or `node.isSelected()` to access.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>statusNodeType</code></td>
            
            
            
            
            
            
            <td class="description last">If set, make this node a status node. Values: 'error', 'loading', 'nodata', 'paging'.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>title</code></td>
            
            
            
            
            
            
            <td class="description last">Node text (may contain HTML tags). Use `node.setTitle()` to modify.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        string
                        
                    
            </td>
            
            
                <td class="name"><code>tooltip</code></td>
            
            
            
            
            
            
            <td class="description last">Will be added as `title` attribute, thus enabling a tooltip.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        boolean
                        
                    
            </td>
            
            
                <td class="name"><code>unselectable</code></td>
            
            
            
            
            
            
            <td class="description last">Prevent (de-)selection using mouse or keyboard.</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        any
                        
                    
            </td>
            
            
                <td class="name"><code>OTHER</code></td>
            
            
            
            
            
            
            <td class="description last">Attributes other than listed above will be copied to `node.data`.</td>
        </tr>
	
	
	</tbody>
</table></dl>
        
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
	<dt class="tag-source">Source:</dt>
	<dd class="tag-source"><ul class="dummy"><li>jsdoc-globals.js, line 51</li></ul></dd>
	
-->
    
	
	
	
	
</dl>

    
    
</dd>

        
            
<dt>
    <h4 class="name" id="NodePatch"><span class="type-signature"></span>NodePatch<span class="type-signature"> :Object</span></h4>
    
    
</dt>
<dd>
    
    <div class="description">
        Data object similar to <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodeData">NodeData</a>, but with additional options.
May be passed to <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/FancytreeNode.html#applyPatch">FancytreeNode#applyPatch</a>
(Every property that is omitted (or set to undefined) will be ignored)
    </div>
    
    
    
<dl class="details">
    
        
        <h5 class="subsection-title">Properties:</h5>
        
        <dl>

<table class="props">
    <thead>
	<tr>
		<th>Type</th>
		
		
		<th>Name</th>
		
		
		
		
		
		
		<th class="last">Description</th>
	</tr>
	</thead>
	
	<tbody>
	
	
        <tr>
            <td class="type">
            
                        any
                        
                    
            </td>
            
            
                <td class="name"><code>any</code></td>
            
            
            
            
            
            
            <td class="description last">(see NodeData)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodeData">NodeData</a>
                        
                    
            </td>
            
            
                <td class="name"><code>appendChildren</code></td>
            
            
            
            
            
            
            <td class="description last">(not yet implemented)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodeData">NodeData</a>
                        
                    
            </td>
            
            
                <td class="name"><code>replaceChildren</code></td>
            
            
            
            
            
            
            <td class="description last">(not yet implemented)</td>
        </tr>
	
	
	
        <tr>
            <td class="type">
            
                        <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodeData">NodeData</a>
                        
                    
            </td>
            
            
                <td class="name"><code>insertChildren</code></td>
            
            
            
            
            
            
            <td class="description last">(not yet implemented)</td>
        </tr>
	
	
	</tbody>
</table></dl>
        
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
	<dt class="tag-source">Source:</dt>
	<dd class="tag-source"><ul class="dummy"><li>jsdoc-globals.js, line 96</li></ul></dd>
	
-->
    
	
	
	
	
</dl>

    
    
</dd>

        
            
<dt>
    <h4 class="name" id="TreePatch"><span class="type-signature"></span>TreePatch<span class="type-signature"> :Object</span></h4>
    
    
</dt>
<dd>
    
    <div class="description">
        List of [key, <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodePatch">NodePatch</a>]  tuples.
May be passed to <a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree.html#applyPatch">Fancytree#applyPatch</a>.
    </div>
    
    
    
<dl class="details">
    
        
    
        
	
	
	
	
	
	
	
	
	
	
	
	
	
<!-- 	
	
	<dt class="tag-source">Source:</dt>
	<dd class="tag-source"><ul class="dummy"><li>jsdoc-globals.js, line 111</li></ul></dd>
	
-->
    
	
	
	
	
</dl>

    
    
</dd>

        </dl>
    
<!-- 
    
-->
    
    
    
    
    
</article>

</section>  




</div>

<nav>
    <h2><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/index.html">Index</a></h2><h3>Classes</h3><ul><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree.html">Fancytree</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/FancytreeNode.html">FancytreeNode</a></li></ul><h3>Mixins</h3><ul><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Hooks.html">Fancytree_Hooks</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Static.html">Fancytree_Static</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/Fancytree_Widget.html">Fancytree_Widget</a></li></ul><h3>Global</h3><ul><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#EventData">EventData</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#FancytreeEvents">FancytreeEvents</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#FancytreeOptions">FancytreeOptions</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodeData">NodeData</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#NodePatch">NodePatch</a></li><li><a href="http://wwwendt.de/tech/fancytree/doc/jsdoc/global.html#TreePatch">TreePatch</a></li></ul>
</nav>

<br clear="both">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3</a> on Fri Aug 05 2016 15:47:40 GMT+0200 (MESZ)
    using <a href="https://github.com/mar10/fancytree/tree/master/bin/jsdoc3-moogle" target="_blank">fancytree custom template</a>.
</footer>

<script> sh_highlightDocument(); </script>

<a href="https://github.com/mar10/fancytree/"><img style="position: absolute; top: 0; right: 0; border: 0;" src="./JSDoc_ Global_files/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkmerightorange_ff7600.png"></a>



</body></html>